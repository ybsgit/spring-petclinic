pool: 
  vmImage: 'ubuntu-latest'
variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
      - task: Cache@2
        inputs:
          key: 'maven | "$(Agent.OS)" | **/pom.xml'
          restoreKeys: |
            maven | "$(Agent.OS)"
            maven
          path: $(MAVEN_CACHE_FOLDER)
        displayName: Cache Maven local repo
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            # Write your commands here
            free -mh
            pwd 
            java -version
            mkdir /opt/java17
            wget https://download.oracle.com/java/17/archive/jdk-17.0.6_linux-x64_bin.tar.gz
            pwd
      - task: JavaToolInstaller@0
        inputs:
          versionSpec: '17'
          jdkArchitectureOption: 'x64'
          jdkSourceOption: 'LocalDirectory'
          jdkFile: 'jdk-17.0.6_linux-x64_bin.tar.gz'
          jdkDestinationDirectory: '/opt/java17/'
          cleanDestinationDirectory: true
      - task: Maven@4
        inputs:
          mavenPomFile: 'pom.xml'
          options: '-DargLine="-Xmx8096m" $(MAVEN_OPTS)'
          publishJUnitResults: false
          javaHomeOption: 'JDKVersion'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
      - task: CopyFiles@2
        inputs:
          Contents: '**/**/*.war'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'war'
          publishLocation: 'Container'